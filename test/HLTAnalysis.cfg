process ANALYSIS  = {

    untracked PSet maxEvents = {untracked int32 input = 20}


    ######################################################################
    # Random number generator service for the simulation step
    service =  RandomNumberGeneratorService {
	# This is to initialize the random engine of the source
	untracked uint32 sourceSeed = 123456789
	# This is to initialize the random engines of Famos
	PSet moduleSeeds =
	{
	    untracked uint32 VtxSmeared = 123456789
	    untracked uint32 famosPileUp = 918273
	    untracked uint32 famosSimHits = 13579
	    untracked uint32 siTrackerGaussianSmearingRecHits = 24680
	    untracked uint32 caloRecHits = 654321
	    untracked uint32 paramMuons = 54525
	    untracked uint32 l1ParamMuons = 4389
	    untracked uint32 MuonSimHits = 97531
	    untracked uint32 muonDTDigis = 67673876
	    untracked uint32 muonCSCDigis = 525432
	    untracked uint32 muonRPCDigis = 524964
	}
    }
    ######################################################################


    ######################################################################
    #           SOURCE TO GENERATE EVENTS
    ######################################################################
    # Put here your source 
    # Several examples follow, just add the one you'd like if it's 
    # not in this list below.
    # Generate H -> ZZ -> l+l- l'+l'- (l,l'=e or mu), with mH=180GeV/c2
    include "FastSimulation/Configuration/data/HZZllll.cfi"
    # Generate ttbar events
    #  include "FastSimulation/Configuration/data/ttbar.cfi"
    # Generate multijet events with different ptHAT bins
    #  include "FastSimulation/Configuration/data/QCDpt80-120.cfi"
    #  include "FastSimulation/Configuration/data/QCDpt600-800.cfi"
    # Generate Minimum Bias Events
    #  include "FastSimulation/Configuration/data/MinBiasEvents.cfi"
    # Generate muons with a flat pT particle gun, and with pT=10 GeV.
    # include "FastSimulation/Configuration/data/FlatPtMuonGun.cfi"
    # replace FlatRandomPtGunSource.PGunParameters.PartID={130}
    # Generate di-electrons with pT=35 GeV
    # include "FastSimulation/Configuration/data/DiElectrons.cfi"
    ######################################################################


    ######################################################################
    #        GENERATOR-LEVEL EVENT FILTER
    ######################################################################
    # Put your generator-level filter(s) at the end of this sequence
    # GenParticles, etc, are needed for genJets, GenMet, etc...
    include "PhysicsTools/HepMCCandAlgos/data/genEventWeight.cfi"
    include "PhysicsTools/HepMCCandAlgos/data/genEventScale.cfi"
    include "PhysicsTools/HepMCCandAlgos/data/genParticles.cfi"
    sequence MCfilter = { 
	genParticles &
	genParticleCandidates &
	genParticlesAllStable &
	genCandidatesForMET &
	iterativeCone5GenJets &
	genMet &
	genEventScale & 
	genEventWeight
    }
    ######################################################################


    ######################################################################
    #        SIMULATION WITH FAST SIMULATION
    ######################################################################
    # (Fast) Simulation step
    include "FastSimulation/Configuration/data/CommonInputsFake.cff"
    include "FastSimulation/Configuration/data/FamosSequences.cff"
    sequence simulation = { 
	MCfilter &
	simulationWithFamos  
    }
    ######################################################################


    ######################################################################
    #        EMULATION OF LEVEL-1 TRIGGER, FOLLOWED BT ALL HLT PATHS
    ######################################################################
    # L1 Emulator and HLT Setup
    sequence hltEnd = { dummyModule }
    include "FastSimulation/HighLevelTrigger/data/common/HLTSetup.cff"
    include "HLTrigger/Configuration/data/main/HLTpaths.cff"
    replace hltTrigReport.HLTriggerResults = TriggerResults::ANALYSIS
    ######################################################################


    ######################################################################
    #        RECONSTRUCTION OF PHOTONS, ELECTRONS, MUONS
    ######################################################################
    # Reconstruction of all events, including those rejected at L1/HLT
    # Note: if you don't need reconstruction of electrons, comment
    # famosElectronSequence, if you don't need reconstructed photons, 
    # comment famosPhotonSequence, if you don't need reconstructed muons,
    # comment paramMuons. If you need more reconstructed objects, just
    # ask Patrick.Janot@cern.ch
    sequence reconstruction = {
	ctfGSTracking &
	towerMaker &
	caloTowers &
	ecalClusteringSequence &
	famosElectronSequence &
	famosPhotonSequence &
	paramMuons 
    }
    # If you don't need reconstruction at all, comment the Reconstruction path
    path Reconstruction = { 
	MCfilter &
	doCalo & 
	towerMakerForAll & 
	reconstruction 
    }
    ######################################################################


    ######################################################################
    #           HLT OPEN, FINALLY !
    ######################################################################
    # And here, finally, we do the HLTOpen thing. 
    # Trigger seequences are defined here (without filters)
    # It is a simplified copy of the same file in HLTrigger/HLTanalyzers
    # to avoid duplicate definitions of triggers
    include "FastSimulation/HighLevelTrigger/test/HLTopen.cff"
    # Here the HLT analyser module is defined. It's copied from a 
    # similar file in HLTrigger/HLTanalyzers, where both the module
    # definition and other things were merged (bad practice)
    include "FastSimulation/HighLevelTrigger/test/HLTAnalyser.cfi"
    # Here the analysis step for HLTOpen 
    # It has to be in an endpath, because it need the TriggerResults, 
    # themselves produced in the precious endpath.
    endpath AnalyzeThis = {hltanalysis}
    ######################################################################


    ######################################################################
    #          MESSAGE LOGGER
    ######################################################################
    # Keep the logging output in a file named "detailedInfo.txt"
    include "FWCore/MessageService/data/MessageLogger.cfi"
    replace MessageLogger.destinations = {"detailedInfo.txt"}
    ######################################################################
    
}		
